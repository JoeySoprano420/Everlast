# Here’s a simple Everlast program that prints "Hello, World!" to the console.

⸻

# Everlast Source Code

extern printf;

func main() {
    printf("Hello, World!\n");
    return 0;
}



⸻

# Lexing Output (Hexadecimal Representation)

0x10 0x20 0x30 0x40 0x50 0x60

# (This depends on the ConversionTable.txt mappings.)

⸻

# Parsing Output (x64 Assembly)

section .data
    message db "Hello, World!", 0

section .text
    global main
    extern printf

main:
    push rbp
    mov rdi, message
    call printf
    mov eax, 0
    pop rbp
    ret



⸻

# Machine Code Output

0x55
0x48 0x89 0xE5
0x48 0xC7 0xC7 <address_of_message>
0xE8 <relative_call_to_printf>
0xB8 0x00 0x00 0x00 0x00
0x5D
0xC3

# (Binary output optimized for execution.)

⸻

/* Execution

This program:
	1.	Declares an external reference to printf.
	2.	Defines a function main(), which:
	•	Loads "Hello, World!" into a register.
	•	Calls printf.
	•	Returns 0 (exit status).
	3.	Compiles directly to machine code and executes.

This showcases Everlast’s minimal abstraction while maintaining structured programmability. */
